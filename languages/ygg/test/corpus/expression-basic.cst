==================
Expression-1.1 `?`
==================
test = name?
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (unary_suffix
          (expression
            (data
              (id))))))))

==================
Expression-1.2 `+`
==================
test = name+
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (unary_suffix
          (expression
            (data
              (id))))))))

==================
Expression-1.3 `*`
==================
test = name*
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (unary_suffix
          (expression
            (data
              (id))))))))

==================
Expression-2.1 `^`
==================
test = ^name
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (unary_prefix
          (expression
            (data
              (id))))))))

==================
Expression-3.1 `~`
==================
test = a ~ b
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (concat_expression
          (expression
            (data
              (id)))
          (WHITESPACE)
          (WHITESPACE)
          (expression
            (data
              (id))))))))

==================
Expression-3.2 `~`
==================
test = e1 ~ e2 ~ e3 ~ e4
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (concat_expression
          (expression
            (concat_expression
              (expression
                (concat_expression
                  (expression
                    (data
                      (id)))
                  (WHITESPACE)
                  (WHITESPACE)
                  (expression
                    (data
                      (id)))))
              (WHITESPACE)
              (WHITESPACE)
              (expression
                (data
                  (id)))))
          (WHITESPACE)
          (WHITESPACE)
          (expression
            (data
              (id))))))))

==================
Expression-3.3 ` `
==================
test = a  b
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (data
          (id)))))
  (WHITESPACE)
  (WHITESPACE)
  (ERROR
    (id)))

==================
Expression-4.1 `|`
==================
test = a | b
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (WHITESPACE)
      (expression
        (choice_expression
          (choice_tag
            (expression
              (data
                (id))))
          (WHITESPACE)
          (WHITESPACE)
          (choice_tag
            (expression
              (data
                (id)))))))))

==================
Expression-4.2 `#`
==================
test = a #A
------------------

(program
  (ERROR
    (id)
    (WHITESPACE)
    (eq)
    (WHITESPACE)
    (choice_tag
      (expression
        (data
          (id)))
      (WHITESPACE)
      (id))))

==================
Expression-4.3 `#`
==================
test =
	| a #A
	| b
------------------

(program
  (statement
    (assign_statement
      (id)
      (WHITESPACE)
      (eq)
      (NEWLINE)
      (WHITESPACE)
      (WHITESPACE)
      (WHITESPACE)
      (expression
        (choice_expression
          (choice_tag
            (expression
              (data
                (id)))
            (WHITESPACE)
            (id))
          (NEWLINE)
          (WHITESPACE)
          (WHITESPACE)
          (WHITESPACE)
          (choice_tag
            (expression
              (data
                (id)))))))))
